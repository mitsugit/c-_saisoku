using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace browsetest
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            // 初期フォルダを一覧
            string initialFolder = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments);
            initialFolder = @"C:\new_document";

            // 初期フォルダのサブフォルダを一覧表示
            OpenFolder(initialFolder);
        }

        private void OpenFolder(string folder)
        {
            if (!Directory.Exists(folder))
            {
                return;
            }

            // 現在のフォルダパスを、テキストボックスに表示
            this.addressText.Text = folder;
            this.folderList.Items.Clear();
            this.folderList.Items.Add("上のフォルダへ");

            // 初期フォルダのサブフォルダを一覧表示
            string[] dirs = Directory.GetDirectories(folder);
            foreach (string dir in dirs)
            {
                string[] subitems = new string[] { Path.GetFileName(dir), "フォルダ" };
                ListViewItem item = new ListViewItem(subitems);
                this.folderList.Items.Add(item);
            }

            // 初期フォルダのファイルを一覧表示
            string[] files = Directory.GetFiles(folder);

            foreach (string file in files)
            {
                string[] subitems = new string[] { Path.GetFileName(file), "ファイル" };
                ListViewItem item = new ListViewItem(subitems);
                this.folderList.Items.Add(item);
            }
        }


        private void folderList_MouseDoubleClick(object sender, MouseEventArgs e)
        {
            // マウスがどのアイテムをクリックしたか判定
            ListViewHitTestInfo hti = this.folderList.HitTest(e.Location);
            ListViewItem item = hti.Item;
            OpenItem(item);

        }

        private void OpenItem(ListViewItem item)
        {
            // 該当するアイテムを開く
            string path = Path.Combine(this.addressText.Text, item.Text);
            if (item.Text == "上のフォルダへ")
            {
                string parentDir = Path.GetDirectoryName(this.addressText.Text);
                OpenFolder(parentDir);
                return;
            }

            switch (item.SubItems[1].Text)
            {
                case "フォルダ":
                    {
                        OpenFolder(path);
                        break;
                    }
                case "ファイル":
                    {
                        OpenFileDialog(path);
                        break;
                    }
            }
        }

        private void OpenFileDialog(string path)
        {
            // ファイルの中身を、テキストボックスに表示する

            this.contentsText.Text = File.ReadAllText(path);
        }

        private void folderList_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (folderList.SelectedItems.Count == 0)
            {
                return;
            }

            if(e.KeyChar == (char)Keys.Enter)
            {
                //ここまで
                Console.WriteLine("ここまで");
                //選択中のアイテムをひらく
                OpenItem(this.folderList.SelectedItems[0]);
                
               
            }
        }
    }
}
